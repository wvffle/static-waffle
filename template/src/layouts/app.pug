include /values/mixins

doctype html
html
  head
    block pre-head
      meta(charset='utf-8')
    
    block head
      title!= app.name
      
    block scripts
      script(src="https://cdn.polyfill.io/v2/polyfill.js?features=IntersectionObserver,Promise,fetch")
        
      +npm('vue/dist/vue.js')
      +npm('vue-router/dist/vue-router.js')
      +npm('systemjs/dist/system.js')
      +npm('slugify')
      
      script.
        window._waffle = {
          view: `#{view}`,
          app: `#{app.name}`,
          routeDecorator: `!{routeDecorator}`,
          err: !{!err || err.status === 200 ? false : JSON.stringify(err)},
          styles: document.createElement('style'),
          async get (url, type = 'text') {
            const response = await fetch(url)
            return response[type]()
          },
          async import (url, ...args) {
            if (url.endsWith('.css')) {
              if (this.styles[url]) return
              this.styles[url] = true
              
              if (!url.startsWith('http')) {
                url = `https://cdn.jsdelivr.net/npm/${url}`
              }
            
              const style = document.createElement('link')
              style.rel = 'stylesheet'
              style.href = url
              document.head.appendChild(style)
              return style
            }
              
            if (url.startsWith('http')) {
              return System.import(url, ...args)
            }
              
            return System.import(`https://cdn.jsdelivr.net/npm/${url}`, ...args)
          },
          async loadStyle (component) {
            if (this.styles[component]) return
            this.styles[component] = true
            
            const data = await this.get(`components/styles/${component}.css`)
            this.styles.innerHTML += data
          }
        }
        
        document.head.appendChild(_waffle.styles)
        
      +script('/components/fetcher')
      
    block route-scripts
      +script('routes')
      
    block styles
      +npm('reset.css')
      +npm('nprogress/nprogress.css')
      +font('Source Sans Pro', [ 200, 400, 700 ])
      
  body
    #app
      block router
        router-view
        
    block post-scripts
      +npm('nprogress')
      +script('router')
      +script('app')
